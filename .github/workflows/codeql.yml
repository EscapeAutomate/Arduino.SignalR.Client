# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '37 20 * * 3'

jobs:
  analyze:
    name: Build & Test
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        
#    - name: Cache pip
#      uses: actions/cache@v2
#      with:
#        path: ~/.cache/pip
#        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
#        restore-keys: |
#          ${{ runner.os }}-pip-
#          
#    - name: Cache PlatformIO
#      uses: actions/cache@v2
#      with:
#        path: ~/.platformio
#        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
        
    - name: Set up Python
      uses: actions/setup-python@v2
      
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
        
    - name: Install
      run: sudo apt-get install -y lcov

    - name: Build library
      run: pio run --environment esp32-s3-devkitc-1

    - name: Build native library
      run: pio run --environment native
      
    - name: Create base coverage
      run: lcov -c --no-external -i -d . -o coverage_base.info

    - name: Run Test
      run: pio test --environment native      
      
    - name: lcov --capture
      run: lcov --capture --no-external --directory . --output-file coverage.info
      
    - name: lcov combine
      run:  lcov -a coverage_base.info -a coverage.info -o coverage_total.info
      
    - name: lcov --remove
      run: lcov --remove coverage_total.info --output-file coverage_filtered.info "$(pwd)/.pio/*" "$(pwd)/test/*"
      
    - name: Upload to Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: coverage_filtered.info
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
